{
	"name": "RoughNotebook",
	"properties": {
		"description": "Trial and Errors for different code lines",
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sapienta",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0fa42ed3-da91-4fc0-98f9-b7b2d764bff3"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"fc99cf89-c588-4499-a08d-b526731d9636": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "ICR4.INV4_DATA.INV4_UNIT1.TEMP_ABNORMAL",
										"3": "0",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:01.5635339Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.197Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "ICR4.INV4_DATA.INV4_UNIT1.TOTAL_STOP_BIT",
										"3": "0",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:01.5635339Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.197Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "ICR4.INV4_DATA.INV4_UNIT2.BUFFER_CONTACTOR_FAULT",
										"3": "0",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:01.5635339Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.307Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "ICR4.INV4_DATA.INV4_UNIT2.CURRENT_UNBALANCE2",
										"3": "0",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:01.5635339Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.307Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "ICR4.INV4_DATA.INV4_UNIT2.DC_OVER_CURRENT",
										"3": "0",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:01.5635339Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.416Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "ICR4.INV4_DATA.INV4_UNIT2.STARTING",
										"3": "0",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:01.5635339Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.541Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "MCR1..B7_ICR11_HT_OG_TVM_AVG_VOLTAGE",
										"3": "18.88",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:01.5635339Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.541Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "MCR1..B2_MONTHLY_EXPORT_MWh",
										"3": "1365.82",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:02.1573612Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.65Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "MCR1..B7_ICR7_INV3_ON_STATUS",
										"3": "1",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:02.1573612Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.65Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-16T21:47:20.49834Z",
										"2": "MCR1..B5_ICR17_INV2_ON_STATUS",
										"3": "1",
										"4": "good",
										"5": "2022-03-16T16:17:20.49834",
										"6": "2022-03-16T10:48:02.1573612Z",
										"7": "0",
										"8": "2022-03-16T10:48:01.76Z",
										"9": "Record"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "deviceid",
										"type": "string"
									},
									{
										"key": "1",
										"name": "ISTtime",
										"type": "string"
									},
									{
										"key": "2",
										"name": "itemname",
										"type": "string"
									},
									{
										"key": "3",
										"name": "value",
										"type": "string"
									},
									{
										"key": "4",
										"name": "quality",
										"type": "string"
									},
									{
										"key": "5",
										"name": "timestamp",
										"type": "string"
									},
									{
										"key": "6",
										"name": "EventProcessedUtcTime",
										"type": "string"
									},
									{
										"key": "7",
										"name": "PartitionId",
										"type": "string"
									},
									{
										"key": "8",
										"name": "EventEnqueuedUtcTime",
										"type": "string"
									},
									{
										"key": "9",
										"name": "IoTHub",
										"type": "string"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"e4a3789a-db32-49d6-a886-05218f266c59": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4..TRAFO_FEEDER_WTI4_ALARM_HV",
										"3": "0",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8224825Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.221Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4..TRAFO_FEEDER_EMERGENCY_PUSH_BUTTON_OPERATED",
										"3": "0",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4..LT_BRKR_OPEN_STATUS_2",
										"3": "0",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4..LT_BRKR_CLOSE_STATUS_1",
										"3": "1",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4..HT_OG_TEST_POSITION",
										"3": "0",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4..HT_OG_BREAKER_OPEN",
										"3": "0",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4..HT_OG_AC_SUPPLY_FAIL",
										"3": "0",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4..FIRE_ALARM_RELAY_1",
										"3": "0",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4.BREAKER_PRG.ICOG_BRK.SPRING_CHARGED",
										"3": "1",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									},
									{
										"0": "bikaner_realtime",
										"1": "2022-03-21T16:41:54.235919Z",
										"2": "ICR4.INV1_DATA.INV1_UNIT2.DC_POWER_kW",
										"3": "1470.69",
										"4": "good",
										"5": "2022-03-21T11:11:54.235919",
										"6": "2022-03-21T05:41:56.8877225Z",
										"7": "0",
										"8": "2022-03-21T05:41:56.377Z",
										"9": "Record"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "deviceid",
										"type": "string"
									},
									{
										"key": "1",
										"name": "ISTtime",
										"type": "string"
									},
									{
										"key": "2",
										"name": "itemname",
										"type": "string"
									},
									{
										"key": "3",
										"name": "value",
										"type": "string"
									},
									{
										"key": "4",
										"name": "quality",
										"type": "string"
									},
									{
										"key": "5",
										"name": "timestamp",
										"type": "string"
									},
									{
										"key": "6",
										"name": "EventProcessedUtcTime",
										"type": "string"
									},
									{
										"key": "7",
										"name": "PartitionId",
										"type": "string"
									},
									{
										"key": "8",
										"name": "EventEnqueuedUtcTime",
										"type": "string"
									},
									{
										"key": "9",
										"name": "IoTHub",
										"type": "string"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"19fa962c-5eef-4e95-9fe5-aee37a3a5f60": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [],
								"schema": [
									{
										"key": "0",
										"name": "deviceid",
										"type": "string"
									},
									{
										"key": "1",
										"name": "ISTtime",
										"type": "string"
									},
									{
										"key": "2",
										"name": "itemname",
										"type": "string"
									},
									{
										"key": "3",
										"name": "value",
										"type": "string"
									},
									{
										"key": "4",
										"name": "quality",
										"type": "string"
									},
									{
										"key": "5",
										"name": "timestamp",
										"type": "string"
									},
									{
										"key": "6",
										"name": "EventProcessedUtcTime",
										"type": "string"
									},
									{
										"key": "7",
										"name": "PartitionId",
										"type": "string"
									},
									{
										"key": "8",
										"name": "EventEnqueuedUtcTime",
										"type": "string"
									},
									{
										"key": "9",
										"name": "IoTHub",
										"type": "string"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/37a47312-6f04-42dc-ad99-290d950fab5d/resourceGroups/AzureSynapse/providers/Microsoft.Synapse/workspaces/sapience/bigDataPools/sapienta",
				"name": "sapienta",
				"type": "Spark",
				"endpoint": "https://sapience.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sapienta",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"jupyter": {
						"outputs_hidden": true
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://bikanerrealtime@ayanadatalake.dfs.core.windows.net/bikaner_realtime/2022/03/16/-1493444302_51fa088073134e608c2153a52b658fcd_1.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					", header=True\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = df.toPandas()"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pandas as pd\r\n",
					"import numpy as np"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pandas as pd"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"unique = df['itemname'].unique()\r\n",
					"#unite.sort()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"len(unique)"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"type(unique)"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data = pd.DataFrame(unique)"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"type(data)"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data.to_csv(\"BikanerTags.csv\")"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df=pd.read_csv(\"BikanerTags.csv\")\r\n",
					"df.head()"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data.to_excel(\"abfss://repono@ayanadatalake.dfs.core.windows.net/scbhisraw/Bikaner.xlsx\")"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"mydict = {'Block': 'Ananthpuramu1',\r\n",
					" 'DC_Capacity': 75.81420135498047,\r\n",
					" 'PVSyst_GHI': 6.289999961853027,\r\n",
					" 'PVSyst_GII': 7.010000228881836,\r\n",
					" 'PVSyst_EGrid': 406.9200134277344,\r\n",
					" 'PVSyst_TAmb_Avg': 29.989999771118164,\r\n",
					" 'PVSyst_TAmb_WtAvg': 32.09000015258789,\r\n",
					" 'PVSyst_TArray_Avg': 44.86000061035156,\r\n",
					" 'PVSyst_TArray_WtAvg': 52.04999923706055,\r\n",
					" 'GHI': 2.630000114440918,\r\n",
					" 'GII': 2.809999942779541,\r\n",
					" 'Tamb': 23.512617111206055,\r\n",
					" 'Tm': 0.0,\r\n",
					" 'RH': 79.01007080078125,\r\n",
					" 'InvEnergy': 179875.59375,\r\n",
					" 'Inv_Donwtime': 0.9399999976158142,\r\n",
					" 'Peak_Power': 51.29999923706055,\r\n",
					" 'CO2_Redcution': 70496.484375,\r\n",
					" 'ImpEnergy': 0.9739999771118164,\r\n",
					" 'Aux.': 0.03799999877810478,\r\n",
					" 'PA': 99.80999755859375,\r\n",
					" 'GA': 100.0,\r\n",
					" 'Year': 2022,\r\n",
					" 'Month': 1,\r\n",
					" 'PVSyst_Egrid_MTD': 2398.52001953125,\r\n",
					" 'PVSyst_PR': 0.7656679153442383,\r\n",
					" 'Ins.Delta': -0.5991441011428833,\r\n",
					" 'NetEnergy': 179875.5625,\r\n",
					" 'AC_Loss': 1.7373118055274972e-07,\r\n",
					" 'NetEnergy_MTD': 420470.9375,\r\n",
					" 'Exp_Energy': 163.1162872314453,\r\n",
					" 'EPI': 1102.744384765625,\r\n",
					" 'SPPr': 442.04156494140625,\r\n",
					" 'PR': 8.443359375,\r\n",
					" 'CUF_DC': 35.1806640625,\r\n",
					" 'CUF_AC': 149.89630126953125,\r\n",
					" 'Rvnu': 0.52343790625,\r\n",
					" 'Rvnu_MTD': 1506.5987548828125}\r\n",
					""
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"msg1 = str(mydict)"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://bikanerrealtime@ayanadatalake.dfs.core.windows.net/bikaner_realtime/2022/03/21/*', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					", header=True\r\n",
					")\r\n",
					"display(df.limit(10))\r\n",
					"\r\n",
					"type(df)\r\n",
					"\r\n",
					"import pyspark.sql.functions as f\r\n",
					"\r\n",
					"dfp = df.filter(f.col(\"itemname\") == \"ICR1.WMS_PRG.WMS.GLOBAL_TILT_IRRADIATION_W/M2\")\r\n",
					"\r\n",
					"display(dfp)"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"spark.sql(\"drop table reassets.invdowntime\")"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df1=spark.sql(\"select * from reassets.antprdayconsolidated order by date desc\")\r\n",
					"df1=df1.toPandas()\r\n",
					"df1"
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df2=spark.sql(\"select * from reassets.invperformance order by Date desc\")\r\n",
					"df2=df2.toPandas()\r\n",
					"df2"
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_Static=pd.read_csv(\"abfss://repono@ayanadatalake.dfs.core.windows.net/staticfiles/Inverter_Table2.csv\")\r\n",
					"df_Static"
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_Static[\"Date\"]=df_Static[\"Date\"].astype(\"datetime64[ns]\")\r\n",
					"df_Static"
				],
				"execution_count": 44
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df3=pd.merge(df_Static,df2,how='inner',left_on=\"Inv\",right_on=\"Inv\")\r\n",
					"df3"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df3.columns"
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df3[\"Date_y\"]=df3[\"Date_y\"].astype(\"datetime64[ns]\")\r\n",
					"df3"
				],
				"execution_count": 47
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df4=pd.merge(df1,df3,left_on=[\"Date\",\"Block\"],right_on=[\"Date_y\",\"Block\"],how=\"inner\")\r\n",
					"df4"
				],
				"execution_count": 48
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df5=spark.sql(\"select * from reassets.invclip  order by Date desc\")\r\n",
					"df5=df5.toPandas()\r\n",
					"df5"
				],
				"execution_count": 60
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df5[\"Inv\"]=df5[\"ICR\"].apply(lambda x:x[0]+x[-2:])+\"_\"+df5[\"Inv\"].apply(lambda x:x[-1])\r\n",
					"df5"
				],
				"execution_count": 61
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df5"
				],
				"execution_count": 62
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df5[\"Date\"]=df5[\"Date\"].astype(\"datetime64[ns]\")\r\n",
					"df5\r\n",
					"df4[\"Date\"]=df4[\"Date\"].astype(\"datetime64[ns]\")\r\n",
					"df4"
				],
				"execution_count": 63
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df6=pd.merge(df5,df4,left_on=[\"Date\",\"Block\",\"Inv\"],right_on=[\"Date\",\"Block\",\"Inv\"],how=\"inner\")\r\n",
					"df6"
				],
				"execution_count": 66
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df6.to_excel(\"abfss://repono@ayanadatalake.dfs.core.windows.net/staticfiles/Stage4.xlsx\")"
				],
				"execution_count": 67
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			}
		]
	}
}